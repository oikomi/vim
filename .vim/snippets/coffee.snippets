snippet //      多行注释
	###
	${1}
	###
snippet -       分隔注释
	# -------------------------------${1}
snippet /       正则
	/${1}/${2}
snippet ///     多行正则（可分多行，可加注释）
	///${1}///
snippet doc     """ .. """
	"""${1}"""
# 类
snippet cl      类定义
	class ${1:cl_name}
snippet cle     类继承
	class ${1:cl_name} extends ${2}
snippet fc      构造函数
	constructor: (${1}) ->${2}
snippet su      调用父类方法
	super${1}
# 函数
snippet f       函数定义（无参数）
	${1:f_name} = ->${2}
snippet f.      函数定义（带参数）
	${1:f_name} = (${2}) ->${3}
snippet ff      匿名函数（带参数）
	(${1}) ->${2}
# 流程控制
snippet if      if
	if ${1}
snippet t       then
	then ${1}
snippet elif    else if
	else if ${1}
snippet el      else
	else ${1}
snippet ul      除 .. 之外
	unless ${1}
snippet fo      for
	for ${1}
snippet foi     for .. in [针对array]
	for ${1} in ${2}
snippet foo     for .. of [针对object]
	for ${1} of ${2}
snippet wh      while循环 [只要 .. 就继续]
	while ${1}
snippet ut      until循环 [直到 .. 才停止]
	until ${1}
snippet lo      loop [相当于while true]
	loop ${1}
snippet sw      switch
	switch ${1}
snippet w       when
	when ${1}
snippet do      do
	do (${1}) ->${2}
# 异常处理
snippet thr     抛出异常
	throw ${1}
snippet try     捕获异常
	try
	  ${1}
snippet cat     处理异常
	catch ${1}
snippet fin     善后处理
	finally
	  ${1}
# 单个关键字
snippet rq      require
	require '${1}'${2}
snippet th      this
	this${1}
snippet tp      类型检查
	typeof ${1}
snippet co      继续
	continue${1}
snippet re      返回
	return${1}
snippet arg     全局参数数组
	arguments${1}
snippet pi      print
	print ${1}
snippet al      alert
	alert ${1}
snippet p       输出
	console.log ${1}
snippet >       =>
	=>${1}
snippet .       ->
	->${1}
